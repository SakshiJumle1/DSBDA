import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score

# Load dataset
df = pd.read_csv("heart.csv", encoding="ISO-8859-1")

# Data Cleaning
df.dropna(inplace=True)
df.drop_duplicates(inplace=True)
df = df[(df['age'] >= 0) & (df['age'] <= 100)]  # Remove invalid age rows

# Feature Engineering
df['age_hr_ratio'] = df['thalach'] / df['age']

# Data Transformation
df['sex'] = df['sex'].map({1: 'male', 0: 'female'})
df = pd.get_dummies(df, drop_first=True)

# Split features and target
X = df.drop('target', axis=1)
y = df['target']

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Model Training
model = LogisticRegression(max_iter=200)
model.fit(X_train, y_train)

# Prediction and Evaluation
y_pred = model.predict(X_test)
print("Accuracy:", accuracy_score(y_test, y_pred))
print("Classification Report:\n", classification_report(y_test, y_pred))
print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred))
